//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NodeController {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localize {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localize() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NodeController.Properties.Localize", typeof(Localize).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Original Node Controller data was imported.
        ///Backward compatibility does not provide the transfer of all data, may be required manual adjustments..
        /// </summary>
        internal static string Mod_BackwardСompatibilityMessage {
            get {
                return ResourceManager.GetString("Mod_BackwardСompatibilityMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WARNING: If you make a new save, you will no longer be able to use original Node Controller on this map..
        /// </summary>
        internal static string Mod_BackwardСompatibilityWarning {
            get {
                return ResourceManager.GetString("Mod_BackwardСompatibilityWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} can&apos;t work with original Node Controller at the same time, you need to disable it..
        /// </summary>
        internal static string Mod_ConflictMessage {
            get {
                return ResourceManager.GetString("Mod_ConflictMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Control node type and shape.
        /// </summary>
        internal static string Mod_Description {
            get {
                return ResourceManager.GetString("Mod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable original Node Controller.
        /// </summary>
        internal static string Mod_DisableOriginal {
            get {
                return ResourceManager.GetString("Mod_DisableOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Added auto mode for main slope direction.
        ///- Added red overlay for short segments (short segments lead wrong vehicle speed).
        ///- Added the ability reset only offset to default.
        ///- Added Polish translation.
        ///- Fix default node shape calculation.
        ///- Fix wrong corner calculation on too sloped or too curved segments.
        ///- Fix broken nodes after reload map without close game.
        ///- Fix vehicle trailers disappear.
        ///- Fix road disappear after disasters.
        ///- Fix wrong train twist direction.
        ///- Fix node height in asset e [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Mod_WhatsNewMessage3_0_1 {
            get {
                return ResourceManager.GetString("Mod_WhatsNewMessage3_0_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Fix node height outside available tiles (5x5).
        ///- Fix node center position.
        ///- Fix crosswalk texture.
        ///- Fix creating button duplicates
        ///- Fix despaired &quot;Make end straight&quot; button..
        /// </summary>
        internal static string Mod_WhatsNewMessage3_0_2 {
            get {
                return ResourceManager.GetString("Mod_WhatsNewMessage3_0_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Added Portuguese translation..
        /// </summary>
        internal static string Mod_WhatsNewMessage3_0_3 {
            get {
                return ResourceManager.GetString("Mod_WhatsNewMessage3_0_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bend.
        /// </summary>
        internal static string NodeStyle_Bend {
            get {
                return ResourceManager.GetString("NodeStyle_Bend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Crossing.
        /// </summary>
        internal static string NodeStyle_Crossing {
            get {
                return ResourceManager.GetString("NodeStyle_Crossing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom.
        /// </summary>
        internal static string NodeStyle_Custom {
            get {
                return ResourceManager.GetString("NodeStyle_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на End.
        /// </summary>
        internal static string NodeStyle_End {
            get {
                return ResourceManager.GetString("NodeStyle_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Middle.
        /// </summary>
        internal static string NodeStyle_Middle {
            get {
                return ResourceManager.GetString("NodeStyle_Middle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stretched.
        /// </summary>
        internal static string NodeStyle_Stretch {
            get {
                return ResourceManager.GetString("NodeStyle_Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UTurn.
        /// </summary>
        internal static string NodeStyle_UTurn {
            get {
                return ResourceManager.GetString("NodeStyle_UTurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset offset.
        /// </summary>
        internal static string Option_KeepDefault {
            get {
                return ResourceManager.GetString("Option_KeepDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main slope direction.
        /// </summary>
        internal static string Option_MainSlopeDirection {
            get {
                return ResourceManager.GetString("Option_MainSlopeDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto.
        /// </summary>
        internal static string Option_MainSlopeDirectionAuto {
            get {
                return ResourceManager.GetString("Option_MainSlopeDirectionAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manually.
        /// </summary>
        internal static string Option_MainSlopeDirectionManually {
            get {
                return ResourceManager.GetString("Option_MainSlopeDirectionManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make ends straight.
        /// </summary>
        internal static string Option_MakeStraightEnds {
            get {
                return ResourceManager.GetString("Option_MakeStraightEnds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Marking.
        /// </summary>
        internal static string Option_Marking {
            get {
                return ResourceManager.GetString("Option_Marking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offset.
        /// </summary>
        internal static string Option_Offset {
            get {
                return ResourceManager.GetString("Option_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}m.
        /// </summary>
        internal static string Option_OffsetFormat {
            get {
                return ResourceManager.GetString("Option_OffsetFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset to default.
        /// </summary>
        internal static string Option_ResetToDefault {
            get {
                return ResourceManager.GetString("Option_ResetToDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rotate.
        /// </summary>
        internal static string Option_Rotate {
            get {
                return ResourceManager.GetString("Option_Rotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}°.
        /// </summary>
        internal static string Option_RotateFormat {
            get {
                return ResourceManager.GetString("Option_RotateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shift.
        /// </summary>
        internal static string Option_Shift {
            get {
                return ResourceManager.GetString("Option_Shift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}m.
        /// </summary>
        internal static string Option_ShiftFormat {
            get {
                return ResourceManager.GetString("Option_ShiftFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slope.
        /// </summary>
        internal static string Option_Slope {
            get {
                return ResourceManager.GetString("Option_Slope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}°.
        /// </summary>
        internal static string Option_SlopeFormat {
            get {
                return ResourceManager.GetString("Option_SlopeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stretch.
        /// </summary>
        internal static string Option_Stretch {
            get {
                return ResourceManager.GetString("Option_Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}%.
        /// </summary>
        internal static string Option_StretchFormat {
            get {
                return ResourceManager.GetString("Option_StretchFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Style.
        /// </summary>
        internal static string Option_Style {
            get {
                return ResourceManager.GetString("Option_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flat.
        /// </summary>
        internal static string Option_StyleFlat {
            get {
                return ResourceManager.GetString("Option_StyleFlat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slope.
        /// </summary>
        internal static string Option_StyleSlope {
            get {
                return ResourceManager.GetString("Option_StyleSlope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Twist.
        /// </summary>
        internal static string Option_Twist {
            get {
                return ResourceManager.GetString("Option_Twist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}°.
        /// </summary>
        internal static string Option_TwistFormat {
            get {
                return ResourceManager.GetString("Option_TwistFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Node type.
        /// </summary>
        internal static string Option_Type {
            get {
                return ResourceManager.GetString("Option_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All.
        /// </summary>
        internal static string Options_All {
            get {
                return ResourceManager.GetString("Options_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Node #{0}.
        /// </summary>
        internal static string Panel_NodeId {
            get {
                return ResourceManager.GetString("Panel_NodeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        internal static string Settings_General {
            get {
                return ResourceManager.GetString("Settings_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select middle nodes.
        /// </summary>
        internal static string Settings_SelectMiddleNodes {
            get {
                return ResourceManager.GetString("Settings_SelectMiddleNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If this option is disabled, the middle nodes will move to clicked position.
        /// </summary>
        internal static string Settings_SelectMiddleNodesDiscription {
            get {
                return ResourceManager.GetString("Settings_SelectMiddleNodesDiscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activate tool.
        /// </summary>
        internal static string Settings_ShortcutActivateTool {
            get {
                return ResourceManager.GetString("Settings_ShortcutActivateTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hold Shift to alignment roads.
        /// </summary>
        internal static string Tool_InfoAlignMode {
            get {
                return ResourceManager.GetString("Tool_InfoAlignMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to align with this corner.
        /// </summary>
        internal static string Tool_InfoApplyAlign {
            get {
                return ResourceManager.GetString("Tool_InfoApplyAlign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hold Alt to change main slope direction.
        /// </summary>
        internal static string Tool_InfoChangeMainMode {
            get {
                return ResourceManager.GetString("Tool_InfoChangeMainMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Node #{0}
        ///Click to edit.
        /// </summary>
        internal static string Tool_InfoClickNode {
            get {
                return ResourceManager.GetString("Tool_InfoClickNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to select corner you want to align.
        /// </summary>
        internal static string Tool_InfoClickToSelectFirstAlign {
            get {
                return ResourceManager.GetString("Tool_InfoClickToSelectFirstAlign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drag to change offset.
        /// </summary>
        internal static string Tool_InfoDragCenter {
            get {
                return ResourceManager.GetString("Tool_InfoDragCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drag to change rotate.
        /// </summary>
        internal static string Tool_InfoDragCircle {
            get {
                return ResourceManager.GetString("Tool_InfoDragCircle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drag to change corner offset.
        /// </summary>
        internal static string Tool_InfoDragCorner {
            get {
                return ResourceManager.GetString("Tool_InfoDragCorner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drag this end to change main slope direction.
        /// </summary>
        internal static string Tool_InfoDragMainSlopeDirectionEnd {
            get {
                return ResourceManager.GetString("Tool_InfoDragMainSlopeDirectionEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drop this end to change main slope direction.
        /// </summary>
        internal static string Tool_InfoDropMainSlopeDirectionEnd {
            get {
                return ResourceManager.GetString("Tool_InfoDropMainSlopeDirectionEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to insert crossing node.
        /// </summary>
        internal static string Tool_InfoInsertCrossingNode {
            get {
                return ResourceManager.GetString("Tool_InfoInsertCrossingNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to insert node.
        /// </summary>
        internal static string Tool_InfoInsertNode {
            get {
                return ResourceManager.GetString("Tool_InfoInsertNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select corner you want to align with.
        /// </summary>
        internal static string Tool_InfoSelectAlignRelative {
            get {
                return ResourceManager.GetString("Tool_InfoSelectAlignRelative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change to desired main slope direction.
        /// </summary>
        internal static string Tool_InfoSelectMainSlopeDirection {
            get {
                return ResourceManager.GetString("Tool_InfoSelectMainSlopeDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select end position of main slope direction.
        /// </summary>
        internal static string Tool_InfoSelectNewMainSlopeDirectionEnd {
            get {
                return ResourceManager.GetString("Tool_InfoSelectNewMainSlopeDirectionEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select node.
        /// </summary>
        internal static string Tool_InfoSelectNode {
            get {
                return ResourceManager.GetString("Tool_InfoSelectNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select corners you want to align.
        /// </summary>
        internal static string Tool_InfoSelectToAlign {
            get {
                return ResourceManager.GetString("Tool_InfoSelectToAlign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t insert node
        ///Too close to nearby node.
        /// </summary>
        internal static string Tool_InfoTooCloseNode {
            get {
                return ResourceManager.GetString("Tool_InfoTooCloseNode", resourceCulture);
            }
        }
    }
}
